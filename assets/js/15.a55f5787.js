(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{386:function(t,e,a){"use strict";a.r(e);var s=a(19),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git简介-学习笔记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git简介-学习笔记"}},[t._v("#")]),t._v(" Git简介（学习笔记）")]),t._v(" "),a("p",[t._v("此为学习笔记，教学文档请移步"),a("a",{attrs:{href:"https://www.liaoxuefeng.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("廖雪峰的官方网站"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"git简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git简介"}},[t._v("#")]),t._v(" git简介")]),t._v(" "),a("p",[t._v("git是linux之父linus为了更好的管理linux代码而用"),a("strong",[t._v("C语言")]),t._v("开发的分布式的版本控制器。")]),t._v(" "),a("p",[t._v("集中式版本控制系统和分布式版本控制系统的区别：")]),t._v(" "),a("ol",[a("li",[t._v("集中式版本控制系统：例如SVN和CVS,其必须联网才能操作，版本库集中在中央系统，每次对比和提交代码都必须连接到中央系统才行，一旦中央服务器出现问题，则所有人都无法干活。")]),t._v(" "),a("li",[t._v("分布式控制系统：每个人的电脑就是一个版本库，包含完整的代码和历史，可以进行脱机操作。")]),t._v(" "),a("li",[t._v("两个的区别：分布是控制系统的安全性更高，可以在脱机情况下查看历史版本，一旦中央仓库挂了，只需重新创建一个仓库，重新推送即可。")])]),t._v(" "),a("h2",{attrs:{id:"git安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git安装"}},[t._v("#")]),t._v(" git安装")]),t._v(" "),a("h3",{attrs:{id:"linux下安装git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux下安装git"}},[t._v("#")]),t._v(" linux下安装git")]),t._v(" "),a("p",[t._v("首先输入 "),a("code",[t._v("git")]),t._v(" ，查看是否安装：")]),t._v(" "),a("div",{staticClass:"language-cmd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git\nThe program 'git' is currently not installed. You can install it by typing:\nsudo apt-get install git\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("如果没有安装，一般对于Debian和Ubantu  Linux则会提示你使用 "),a("code",[t._v("sudo apt-get install git")]),t._v(" 命令进行安装, 老一点的版本则需要使用 "),a("code",[t._v("sudo apt-get install git-core")]),t._v(" 进行安装。")]),t._v(" "),a("p",[t._v("对于其他Linux则需要在git官网上下载源码，然后通过依次输入以下代码"),a("font",{attrs:{color:"red"}},[a("code",[t._v("./config")]),t._v(" ， "),a("code",[t._v("make")]),t._v(" ， "),a("code",[t._v("sudo make install")])]),t._v("进行安装。")],1),t._v(" "),a("h3",{attrs:{id:"在mac-os-x上安装git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在mac-os-x上安装git"}},[t._v("#")]),t._v(" 在Mac OS X上安装Git")]),t._v(" "),a("ol",[a("li",[t._v("使用homebrew安装git，具体方法参考官方文档http://brew.sh/。")]),t._v(" "),a("li",[t._v("直接从AppStore安装Xcode，Xcode集成了Git，不过默认没有安装，你需要运行Xcode，选择菜单“Xcode”->“Preferences”，在弹出窗口中找到“Downloads”，选择“Command Line Tools”，点“Install”就可以完成安装了。")])]),t._v(" "),a("h3",{attrs:{id:"在windows上安装git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在windows上安装git"}},[t._v("#")]),t._v(" 在Windows上安装Git")]),t._v(" "),a("p",[t._v("直接在"),a("a",{attrs:{href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"}},[t._v("git官网"),a("OutboundLink")],1),t._v("下载安装程序进行安装即可")]),t._v(" "),a("h3",{attrs:{id:"设置姓名和邮箱"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置姓名和邮箱"}},[t._v("#")]),t._v(" 设置姓名和邮箱")]),t._v(" "),a("p",[t._v("在安装完成之后，由于git是分布式版本控制系统，一般需要打开git bash进行设置，名字和email，用于提交时显示提交人信息，输入以下命令")]),t._v(" "),a("div",{staticClass:"language-cmd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git config --global user.name 'your name'\n$ git config --global user.email 'your email'\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("其中 "),a("code",[t._v("--global")]),t._v(" 用来全局设置，也可以在单个仓库进行单独设置。")]),t._v(" "),a("h2",{attrs:{id:"创建版本仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建版本仓库"}},[t._v("#")]),t._v(" 创建版本仓库")]),t._v(" "),a("p",[t._v("版本库（仓库）即repository, 可以简单的理解为一个目录，里面的所有文件都被git所管理，每个文件的修改、删除，git都能进行跟踪，并在某刻时刻进行还原。")]),t._v(" "),a("h3",{attrs:{id:"创建空目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建空目录"}},[t._v("#")]),t._v(" 创建空目录")]),t._v(" "),a("p",[t._v("首先建立一个空的目录, 并进入到目录中，通过 "),a("code",[t._v("pwd")]),t._v(" 查看目录所在地址：")]),t._v(" "),a("div",{staticClass:"language-cmd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ mkdir learngit\n$ cd learngit\n$ pwd\n/c/Users/lf/Desktop/learngit\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"初始化仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化仓库"}},[t._v("#")]),t._v(" 初始化仓库")]),t._v(" "),a("p",[t._v("通过 "),a("code",[t._v("git init")]),t._v(" 实例化仓库，这是在文件目录下可以看到 "),a("code",[t._v(".git")]),t._v(" 目录，这个目录是用来跟踪版本库的，不可以随便修改，以免破坏git仓库。")]),t._v(" "),a("div",{staticClass:"language-cmd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git init\nInitialized empty Git repository in C:/Users/lf/Desktop/learngit/.git/\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/recoveryMonster/HexoImages/master/img/20190707005503.png",alt:""}})]),t._v(" "),a("p",[t._v("这个目录默认是隐藏的，可以通过 "),a("code",[t._v("ls -ah")]),t._v(" 来查看")]),t._v(" "),a("h3",{attrs:{id:"添加文件到版本仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加文件到版本仓库"}},[t._v("#")]),t._v(" 添加文件到版本仓库")]),t._v(" "),a("p",[t._v("**注意：**所有的版本仓库，只能追踪文本文件的改动，比如TXT文件，网页，所有的程序代码等等，而像图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是只知道图片从100KB改成了120KB，并不知道改变的其中内容。")]),t._v(" "),a("p",[t._v("Microsoft的Word格式是二进制格式，因此，版本控制系统是没法跟踪Word文件的改动的，所以我们要使用纯文本方式编写文件，建议使用"),a("font",{attrs:{color:"red"}},[a("strong",[t._v("标准的UTF-8编码")])]),t._v("，所有语言使用同一种编码，既没有冲突，又被所有平台所支持。")],1),t._v(" "),a("p",[a("strong",[t._v("建议")]),t._v("notepade++代替记事本进行编辑，因为windows自带的记事本会在每个文件开头添加了0xefbbbf（十六进制）的字符。")]),t._v(" "),a("p",[t._v("现在编写一个 "),a("code",[t._v("readme.txt")]),t._v(" 文件，内容如下：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ touch readme.txt\n$ vi readme.txt\n//编写内容如下\nGit is a version control system.\nGit is free software.\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("此文件一定要放在"),a("font",{attrs:{color:"red"}},[a("code",[t._v("learngit")])]),t._v("目录下（子目录），因为这是一个git仓库，放在别处，则找不到此文件。")],1),t._v(" "),a("p",[t._v("把文件放到仓库只需要两个步骤：")]),t._v(" "),a("h4",{attrs:{id:"添加到仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加到仓库"}},[t._v("#")]),t._v(" 添加到仓库")]),t._v(" "),a("p",[t._v("通过"),a("font",{attrs:{color:"red"}},[a("code",[t._v("git add")])]),t._v("告诉git，将文件添加到仓库。")],1),t._v(" "),a("div",{staticClass:"language-cmd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git add readme.txt\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("执行命令之后，若没有任何显示，则说明添加成功。")]),t._v(" "),a("p",[t._v("在windows下操作，可能会出现以下警告信息：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/recoveryMonster/HexoImages/master/img/20190707012043.png",alt:""}})]),t._v(" "),a("p",[t._v("**原因：**这是因为在 "),a("code",[t._v("windows")]),t._v(" 下使用 "),a("code",[t._v("CRLF")]),t._v(" 标识一行的结束，而在 "),a("code",[t._v("Linux/UNIX")]),t._v(" 系统中只使用 "),a("code",[t._v("LF")]),t._v(" 标识一行的结束。这里的CRLF指的是 "),a("code",[t._v("Carriage-Return")]),t._v(" (回车) "),a("code",[t._v("Line-Feed")]),t._v(" （换行）。")]),t._v(" "),a("p",[t._v("通常情况下，Git库不会自动修改文件内容，但是默认会将入库的文件的行尾符设置为LF，会将检出的文件的行尾符设置为CRLF。但是在执行如下操作时出现如上警告：")]),t._v(" "),a("p",[t._v("上面的警告表明在 "),a("code",[t._v("readme.txt")]),t._v(" 的行尾为LF，在git入库时这里将会被替换为CRLF，这里的警告无伤大雅，因为在git库中，文件仍然是以LF结尾的。")]),t._v(" "),a("p",[t._v("**去除警告：**Git的CRLF相关特性与gitattributes文件中的设置相关。")]),t._v(" "),a("p",[t._v("在工作目录中，我们可以通过设置eol属性控制一个文件的行尾为CRLF或LF。我们也可以通过设置core.eol属性控制当前Git库中的所有文件的行尾为CRLF或LF。我们还可以设置core.autocrlf属性以覆盖core.eol属性的设置。如果要设置工作目录中的文件的行尾总是CRLF，而Git库中的文件的行尾总是LF，默认core.autocrlf=true。")]),t._v(" "),a("ol",[a("li",[t._v("查看core.autocrlf属性")])]),t._v(" "),a("div",{staticClass:"language-cmd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   $  git config --global  --get core.autocrlf\n   \n   $  git config --get core.autocrlf\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/recoveryMonster/HexoImages/master/img/20190707013533.png",alt:""}})]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[t._v("设置core.autocrlf属性")]),t._v(" "),a("p",[t._v("设置core.autocrlf=false, 去除警告（只是眼不见心不烦而已）")])])]),t._v(" "),a("div",{staticClass:"language-cmd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   $ git config core.autocrlf false\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/recoveryMonster/HexoImages/master/img/20190707013711.png",alt:""}})]),t._v(" "),a("p",[t._v("此时在 "),a("code",[t._v("git add")]),t._v(" 则不会出现警告信息")]),t._v(" "),a("p",[t._v("如果直接执行 "),a("code",[t._v("git add")]),t._v(" 而不指定添加的文件，会出现以下信息：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/recoveryMonster/HexoImages/master/img/20190707143808.png",alt:""}})]),t._v(" "),a("p",[t._v("上面的信息说没有指定添加的文件，你或许想要使用的命令是 "),a("code",[t._v("git add .")]),t._v(" 。")]),t._v(" "),a("p",[a("strong",[a("a",{attrs:{href:"https://www.cnblogs.com/skura23/p/5859243.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("相关命令及区别"),a("OutboundLink")],1)])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("git add -A")]),t._v(" 提交所有变化")]),t._v(" "),a("li",[a("code",[t._v("git add -u")]),t._v(" 提交被修改(modified)和被删除(deleted)文件，不包括新文件(new)")]),t._v(" "),a("li",[a("code",[t._v("git add .")]),t._v(" 提交新文件(new)和被修改(modified)文件，不包括被删除(deleted)文件")])]),t._v(" "),a("h4",{attrs:{id:"提交到仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交到仓库"}},[t._v("#")]),t._v(" 提交到仓库")]),t._v(" "),a("p",[t._v("通过"),a("font",{attrs:{color:"red"}},[a("code",[t._v("git commit -m'提交说明'")])]),t._v("命令，将文件提交到仓库")],1),t._v(" "),a("div",{staticClass:"language-cmd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git commit -m 'write a readme file'\n[master (root-commit) 1210adb] write a readme file\n 1 file changed, 2 insertions(+)\n create mode 100644 readme.txt\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[a("font",{attrs:{color:"red"}},[a("code",[t._v("git commit")])]),t._v("命令提交成功后，会告诉你"),a("font",{attrs:{color:"red"}},[a("code",[t._v("1 file changed")])]),t._v("：一个文件被改动，我们新添加的readme.txt文件，"),a("font",{attrs:{color:"red"}},[a("code",[t._v("2 insertions(+)")])]),t._v("：插入了两行内容（readme.txt文件由两行内容）。")],1),t._v(" "),a("p",[t._v("**注意：**你可以add多个文件，或多次add不同文件，通过"),a("font",{attrs:{color:"red"}},[a("code",[t._v("commit")])]),t._v("一次提交多个文件。")],1)])}),[],!1,null,null,null);e.default=r.exports}}]);